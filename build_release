#!/bin/bash
#
# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# # Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END
#
# Copyright 2022 Saso Kiselkov. All rights reserved.

OUTPUT_DIR="OpenGPWS"
case $(uname) in
Darwin)
	INSTALL="install -m 644"
	;;
*)
	INSTALL="install -D -m 644"
	;;
esac

if ! which glslang &> /dev/null && ! which glslangValidator &> /dev/null; then
	cat << EOF >&2
Couldn't find the Vulkan SDK. Please download the SDK from:
https://vulkan.lunarg.com/
Then symlink glslangValidator and spirv-cross in your \$PATH

On Ubuntu, you can use this guide to install the Vulkan SDK as a package
(see section "Install the SDK"):
https://vulkan.lunarg.com/doc/sdk/1.2.148.1/linux/getting_started_ubuntu.html
With the Ubuntu package, everything will be set up for you.
EOF
	exit 1
fi

while getopts "AG" o; do
	case "${o}" in
	A)
		NOAUDIO=1
		NOAUDIO_FLAG="-A"
		;;
	G)
		GARMIN=1
		;;
	esac
done

if ! opusenc -h &> /dev/null ; then
	echo "Couldn't find \"opusenc\" command. Please install \"opus-tools\"" \
	    >&2
	exit 1
fi

set -e

rm -rf "$OUTPUT_DIR" "$OUTPUT_DIR.zip"
mkdir -p "$OUTPUT_DIR"

( cd qmake && ./build $NOAUDIO_FLAG ) || exit 1

if [[ $(uname) = Linux ]]; then
	( cd data && make ) || exit 1
fi

if [[ $(uname) = "Linux" ]]; then
	$INSTALL -- "qmake/output/lin_x64/${OUTPUT_DIR}.xpl" \
	    "$OUTPUT_DIR/lin_x64/${OUTPUT_DIR}.xpl"
	$INSTALL -- "qmake/output/win_x64/${OUTPUT_DIR}.xpl" \
	    "$OUTPUT_DIR/win_x64/${OUTPUT_DIR}.xpl"
	$INSTALL -- "qmake/output/win_x64/syms.txt" \
	    "$OUTPUT_DIR/win_x64/syms.txt"
else
	# MacOS "install" is such a pile of trash that it can't create
	# directories automatically while copying files, so we need to
	# hold its hand and do it manually.
	mkdir -p "$OUTPUT_DIR/mac_x64" \
	    "$OUTPUT_DIR/data/garmin" \
	    "$OUTPUT_DIR/data/ra/garmin" \
	    "$OUTPUT_DIR/data/ra/boeing" \
	    "$OUTPUT_DIR/opengpws"
	$INSTALL -- "qmake/output/mac_x64/${OUTPUT_DIR}.xpl" \
	    "$OUTPUT_DIR/mac_x64/${OUTPUT_DIR}.xpl"
fi

find data/bin -iname '*.glsl*' -or -iname '*.spv' | \
    while read; do
	$INSTALL -- "$REPLY" "$OUTPUT_DIR/$REPLY"
done

if [[ "$NOAUDIO" != 1 ]]; then
	find data -iname '*.flac' | fgrep -v '/src/' | while read; do
		if ! [ -f "${REPLY/%.flac/.opus}" ]; then
			opusenc --bitrate 32 "${REPLY}" "${REPLY/%.flac/.opus}"
		fi
	done
fi

if [ -z "$GARMIN" ]; then
	find data -iname '*.opus' -or -iname '*.vert' -or -iname '*.frag' | \
	    while read; do
		$INSTALL -- "$REPLY" "$OUTPUT_DIR/$REPLY"
	done
else
	find data -iname '*.vert' -or -iname '*.frag' | while read; do
		$INSTALL -- "$REPLY" "$OUTPUT_DIR/$REPLY"
	done
	if [[ "$NOAUDIO" != 1 ]]; then
		for FILE in data/*.opus; do
			$INSTALL -- "$FILE" "$OUTPUT_DIR/$FILE"
		done
		find data/ra -iname '*.opus' | while read; do
			$INSTALL -- "$REPLY" "$OUTPUT_DIR/$REPLY"
		done
		find data/garmin -iname '*.opus' | while read; do
			$INSTALL -- "$REPLY" "$OUTPUT_DIR/data"
		done
	fi
fi

$INSTALL -- "api/opengpws/xplane_api.h" "$OUTPUT_DIR/opengpws/xplane_api.h"

# ZIP up the product
zip -r "$OUTPUT_DIR.zip" "$OUTPUT_DIR"
